# This file is a template, and might need editing before it works on your project.
# Template project: https://gitlab.com/pages/jekyll
# Docs: https://docs.gitlab.com/ce/pages/

variables:
  JEKYLL_ENV: production
  LC_ALL: C.UTF-8

stages:
  - test
  - build
  - deploy

behat:
  stage: test
  # when: manual
  # Select image from https://hub.docker.com/_/php/
  image: php:7.3.11
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always
  before_script:
    - apt-get update
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    - apt-get --yes install git zip unzip nodejs
    - nodejs --version
    - npm --version
    - npm install
    - ./node_modules/.bin/drakov --stealthmode -f "./spec/*.apib" -p 3000&
    - php -v
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - php composer.phar install
  script:
    - vendor/bin/behat --suite=core
  allow_failure: false
  cache:
    key: behat
    paths:
      - node_modules/
      - vendor/

build-docs:
  stage: build
  image: ruby:2.6
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$CI_COMMIT_TAG'
      when: always
    - when: on_success
  before_script:
    - apt-get update
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    - apt-get --yes install git zip unzip nodejs
    - nodejs --version
    - npm --version
    - npm install
    - cd docs
    - gem install bundler
    - bundle -v
    - bundle config path 'vendor'
    - bundle install
    - echo $(date -u)
  script:
    - bundle exec jekyll build --destination ../public/
    - cd ..
    - ./bin/parse_apib.sh
  cache:
    key: build
    paths:
      - docs/vendor
  artifacts:
    paths:
      - public

pages:
  stage: deploy
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
    - when: on_success
  script:
    - ls -al
  artifacts:
    paths:
      - public
